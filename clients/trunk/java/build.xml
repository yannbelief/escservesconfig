<project name="escape-client-java" default="build">

    <property name="target.dir" value="${basedir}/target"/>
    <property name="main.classes.dir" value="${target.dir}/classes"/>
    <property name="test.classes.dir" value="${target.dir}/test-classes"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src/main/java"/>
    <property name="test.dir" value="${basedir}/src/test/java"/>
    <property name="reports.dir" value="${target.dir}/reports"/>
    <property name="dist.dir" value="${target.dir}/dist"/>
    <property name="javadoc.dir" value="${target.dir}/doc"/>
    <property name="maven.dir" value="${basedir}/src/main/maven"/>
	<property name="version" value="0.3"/>


    <path id="main.class.path">
        <fileset dir="${lib.dir}/runtime" includes="*.jar"/>
    </path>

	<path id="test.class.path">
        <pathelement location="${main.classes.dir}"/>
        <fileset dir="${lib.dir}/runtime" includes="*.jar"/>
        <fileset dir="${lib.dir}/test" includes="*.jar"/>
    </path>

    <path id="svn.class.path">
        <fileset dir="${lib.dir}/build">
            <include name="svnant.jar"/>
            <include name="svnClientAdapter.jar"/>
        </fileset>
    </path>

    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svn.class.path"/>

    <target name="get.svn.info" unless="svn.revision">
        <svn javahl="false">
            <status path="${basedir}" revisionProperty="svn.revision" urlProperty="svn.url"/>
        </svn>
    </target>

    <target name="clean">
        <delete dir="${target.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${main.classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <javac source="1.5" target="1.5" classpathref="main.class.path" srcdir="${src.dir}" destdir="${main.classes.dir}"/>
        <javac source="1.5" target="1.5" classpathref="test.class.path" srcdir="${test.dir}" destdir="${test.classes.dir}"/>
    </target>

    <target name="test" depends="compile">
        <mkdir dir="${reports.dir}"/>
        <junit printsummary="true" tempdir="${reports.dir}" fork="false"
        	haltonerror="false" haltonfailure="false" timeout="60000">
            <classpath>
                <path refid="test.class.path"/>
                <pathelement location="${test.classes.dir}"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${reports.dir}" failureproperty="unit.test.failed">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

        <fail if="unit.test.failed" message="Unit tests failed"/>
    </target>

	<target name="document" depends="test">
		<mkdir dir="${javadoc.dir}"/>
		<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" packagenames="com.thoughtworks.escape.*"
			classpathref="main.class.path" public="true" noqualifier="java.lang">
			<link href="http://commons.apache.org/configuration/apidocs" />
		</javadoc>
	</target>
				
    <target name="package" depends="compile, document, get.svn.info">
        <mkdir dir="${dist.dir}"/>

        <jar destfile="${dist.dir}/${ant.project.name}-${version}.jar" compress="true" basedir="${main.classes.dir}">
            <manifest>
                <attribute name="Svn-Revision" value="${svn.revision}"/>
                <attribute name="Svn-Url" value="${svn.url}"/>
            </manifest>
        </jar>
    	
    	<jar destfile="${dist.dir}/${ant.project.name}-${version}-with-dependencies.jar" compress="true" >
    		<zipgroupfileset dir="${lib.dir}/runtime" includes="*.jar"/>
    		<zipgroupfileset file="${dist.dir}/${ant.project.name}.jar"/>
    	</jar>
    	
    	<zip destfile="${dist.dir}/${ant.project.name}-${version}-doc.zip" >
    		<fileset dir="${javadoc.dir}" />
    	</zip>

    	<zip destfile="${dist.dir}/${ant.project.name}-${version}-artifactory-bundle.zip">
    		<zipfileset dir="${dist.dir}" includes="${ant.project.name}-${version}.jar" 
    			prefix="com/thoughtworks/escape/${ant.project.name}/${version}"/>
    		<zipfileset dir="${maven.dir}" includes="*.pom" 
    			prefix="com/thoughtworks/escape/${ant.project.name}/${version}"/>
    	</zip>
    </target>

    <target name="build" description="Build and test our package" depends="clean, compile, test, package"/>

</project>
